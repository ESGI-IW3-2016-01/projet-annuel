imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
#    - { resource: "@HWIOAuthBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    file_storage: s3
    ical_upload_directory: '%kernel.root_dir%/../var/data/upload/calendars'
    ical_success_directory: '%kernel.root_dir%/../var/data/upload/calendars/success'
    ical_error_directory: '%kernel.root_dir%/../var/data/upload/calendars/error'

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_pgsql
        url:      "%env(DATABASE_URL)%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: contact@studentbot.com
        sender_name: L'equipe Student Bot


easy_admin:
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    site_name: '<div class="home-logo">StudentBot</div>'
    design:
        form_theme: 'horizontal'
        assets:
            css:
                - 'https://fonts.googleapis.com/css?family=Syncopate'
                - 'css/custom.css'
    entities:
        QuestionAnswer:
            class: AppBundle\Entity\QuestionAnswer
            label: 'Question / Answer'
        Api:
            class: AppBundle\Entity\Api
            label: 'API'
        ApiLog:
            class: AppBundle\Entity\ApiLog
            label: 'ApiLog'
        Calendar:
            controller: AppBundle\Controller\CalendarController
            class: AppBundle\Entity\Calendar\Calendar
            lavel: 'Calendar'
            list:
                fields:
                    - 'id'
                    - 'name'
                    - 'filename'
                    - 'createdAt'
                    - 'updatedAt'
                    - 'processed'
            form:
                fields:
                    - 'name'
                    - 'group'
                    - { property: 'file', type: 'file' }
        Events:
            class: AppBundle\Entity\Calendar\Event
            lavel: 'Courses'
            list:
                fields: ['id', 'calendar', 'uid', 'startAt', 'endAt', {property: 'stringduration', label: 'Duration'}, 'summary']
        School:
            class: AppBundle\Entity\School\School
            list:
                fields:
                    - { property: 'id', type: 'integer' }
                    - { property: 'name', type: 'text', label: "Name" }
                    - { property: 'street', type: 'text', label: "Address" }
                    - { property: 'postalCode', type: 'text', label: "Postal Code" }
                    - { property: 'city', type: 'text', label: "City" }
                actions:
                    - { name: 'new', label: 'New' }
                    - { name: 'search', label: 'Search' }
                    - { name: 'edit', icon: 'pencil', label: 'Edit' }
                    - { name: 'delete', icon: 'remove', label: 'Delete'}
            form:
                title: 'New School'
                fields:
                    - { property: 'name', type: 'text', label: "Name" }
                    - { property: 'street', type: 'text', label: 'Address' }
                    - { property: 'city', type: 'text', label: 'City' }
                    - { property: 'postalCode', type: 'text', label: 'Postal Code' }
                    - { property: 'description', type: 'textarea', label: 'Description', type_options: {'required': 'false'} }
        StudentGroup:
            class: AppBundle\Entity\School\StudentGroup
            label: 'Classe'
            list:
                fields:
                    - { property: 'id', type: 'text', label: "Id" }
                    - { property: 'scholarYear', type: 'text', label: "Year" }
                    - { property: 'name', type: 'text', label: "Name" }
                    - { property: 'groupNumber', type: 'integer', label: "Group #" }
                    - { property: 'school', label: "School" }
                    - { property: 'calendar', label: "Calendar" }
                actions:
                    - { name: 'new', label: 'New' }
                    - { name: 'search', label: 'Search' }
                    - { name: 'edit', icon: 'pencil', label: 'Edit' }
                    - { name: 'delete', icon: 'remove', label: 'Delete'}
            form:
                title: 'Student Group'
                fields:
                    - { property: 'scholarYear', type: 'text', label: "Year" }
                    - { property: 'name', type: 'text', label: "Name" }
                    - { property: 'groupNumber', type: 'integer', label: "Group #" }
                    - { property: 'school', label: "School", type_options: {'required': 'true'} }
                    - { property: 'calendar', label: "Calendar", type_options: {'required': 'false'} }
        User:
              class: AppBundle\Entity\User
              label: 'User'
              list:
                  fields:
                      - Username
                      - idFacebook
                      - { property: 'email', type: 'email' }
                      - last_login
                      - locked
                      - { property: 'school', label: "School" }
                      - { property: 'studentGroup', label: "Classe" }
                  title: "Customers list"
              form:
                  title: 'Edit User'
                  fields:
                      - { type: 'group', css_class: 'col-sm-6' }
                      - { type: 'section', label: 'User Profil', icon: 'user' }
                      - { property: 'Username', type: 'text' }
                      # - { property: 'email', type: 'email' }
                      # - { property: 'password', type: 'password' }
                      - { type: 'group', css_class: 'col-sm-6'}
                      - { type: 'section', label: 'Identity', icon: 'info' }
                      - { property: 'Firstname', type: 'text', label: 'Pr√©Name' }
                      - { property: 'Lastname', type: 'text', label: 'Name' }
                  actions:
                      delete:
                          name: delete
                          type: method
                          label: action.delete
                          css_class: 'btn btn-default action-delete'
                          icon: trash-o
                      list:
                          name: list
                          type: method
                          label: action.list
                          css_class: 'btn btn-secondary action-list'
                          icon: caret-square-o-left

hwi_oauth:
    http_client:
        timeout:       10000
        verify_peer: false
        max_redirects: 1000
        ignore_errors: false
    firewall_names: [main]
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook.app_id%"
            client_secret:       "%facebook.app_secret%"
            scope:               "email"
            infos_url:     "https://graph.facebook.com/me?fields=name,email,picture,birthday,gender,first_name,last_name"
            paths:
                email: email
            options:
                # display: popup
                csrf: true
