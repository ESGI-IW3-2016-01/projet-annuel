imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@OAuthBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        url:      "%env(DATABASE_URL)%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: contact@studentbot.com
        sender_name: L'equipe Student Bot


easy_admin:
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    site_name: '<div class="home-logo">StudentBot</div>'
    design:
        menu:
            - { label: 'Homepage', route: 'homepage' }
            - { entity: 'Api' }
            - { entity: 'ApiLog' }
            - { entity: 'Emoji' }
            - { entity: 'School' }
            - { entity: 'Promotion' }
            - { entity: 'StudentGroup' }
            - { entity: 'User'}
            - { label: 'Log out', route: 'fos_user_security_logout' }
        form_theme: 'horizontal'
        assets:
            css:
                - 'https://fonts.googleapis.com/css?family=Syncopate'
                - 'css/custom.css'
    entities:
        Api:
            class: AppBundle\Entity\Api
            label: 'API'
            list:
              fields:
                  - { property: 'id', type: 'integer' }
                  - { property: 'name', type: 'text', label: "api.name.label" }
                  - { property: 'enabled', label: "api.enabled.label" }
                  - { property: 'description', type: 'text', label: "api.description.label" }
                  - { property: 'baseUrl', type: 'text', label: "api.baseUrl.label" }
                  - { property: 'token', type: 'text', label: "api.token.label" }
              title: "api.admin.title"
              actions:
                  - { name: 'new', label: 'btn.new' }
                  - { name: 'search', label: 'btn.search' }
                  - { name: 'edit', icon: 'pencil', label: 'btn.edit' }
                  - { name: 'delete', icon: 'remove', label: 'btn.delete'}
            form:
              title: 'Edit Api'
              fields:
                  - { property: 'name', type: 'text', label: "api.name.label" }
                  - { property: 'enabled', label: "api.enabled.label" }
                  - { property: 'description', type: 'text', label: "api.description.label" }
                  - { property: 'baseUrl', type: 'text', label: "api.baseUrl.label" }
                  - { property: 'token', type: 'text', label: "api.token.label" }
        ApiLog:
            class: AppBundle\Entity\ApiLog
            label: 'ApiLog'
        Emoji:
            class: AppBundle\Entity\Facebook\Emoji
            label: 'Emoji'
        School:
            class: AppBundle\Entity\School
            label: 'admin.school.label'
            list:
              fields:
                  - { property: 'id', type: 'integer' }
                  - { property: 'name', type: 'text', label: "Nom de l'établissement" }
                  - { property: 'street', type: 'text', label: "Rue" }
                  - { property: 'city', type: 'text', label: "Ville" }
                  - { property: 'postalCode', type: 'text', label: "Code postal" }
              title: "Liste des établissements scolaire "
              actions:
                  - { name: 'new', label: 'Nouveau' }
                  - { name: 'search', label: 'Recherche' }
                  - { name: 'edit', icon: 'pencil', label: 'Edit' }
                  - { name: 'delete', icon: 'remove', label: 'Supprimer'}
            form:
              title: 'Edit École'
              fields:
                  - { property: 'name', type: 'text', label: "Nom de l'établissement" }
                  - { property: 'street', type: 'text', label: 'Rue' }
                  - { property: 'city', type: 'text', label: 'Ville' }
                  - { property: 'postalCode', type: 'text', label: 'Code postal' }

        Promotion:
            class: AppBundle\Entity\Promotion
            label: 'admin.promotion.label'
            list:
              fields:
                  - { property: 'startDate', type: 'date', label: "Date de début" }
                  - { property: 'endDate', type: 'date', label: "Date de Fin" }
              title: "Liste des promotions"
              actions:
                  - { name: 'new', label: 'Nouveau' }
                  - { name: 'search', label: 'Recherche' }
                  - { name: 'edit', icon: 'pencil', label: 'Edit' }
                  - { name: 'delete', icon: 'remove', label: 'Supprimer'}
            form:
              title: 'Edit Promotion'
              fields:
                  - { property: 'startDate', type: 'date', label: 'Date de début', type_options: {'format': 'dd/MM/yyyy', 'attr': {'class': 'datepicker'} } }
                  - { property: 'endDate', type: 'date', label: 'Date de fin', type_options: {'format': 'dd/MM/yyyy', 'attr': {'class': 'datepicker'} } }
        StudentGroup:
            class: AppBundle\Entity\StudentGroup
            label: 'admin.studentGroup.label'
            list:
              sort: 'promotion'
              fields:
                  - { property: 'id', type: 'text', label: "Id" }
                  - { property: 'name', type: 'text', label: "Nom" }
                  - { property: 'schoolYear', type: 'text', label: "Année d'étude" }
                  - { property: 'promotion', label: "Promotion" }
                  - { property: 'school', label: "École" }
                  - { property: 'planning', label: "Agenda" }
              title: "Liste des classes"
              actions:
                  - { name: 'new', label: 'Nouveau' }
                  - { name: 'search', label: 'Recherche' }
                  - { name: 'edit', icon: 'pencil', label: 'Edit' }
                  - { name: 'delete', icon: 'remove', label: 'Supprimer'}
            form:
              title: 'Edit classe'
              fields:
                  - { property: 'name', type: 'text', label: "Nom" }
                  - { property: 'schoolYear', type: 'text', label: "Année d'étude" }
                  - { property: 'promotion', label: "Promotion", type_options: {'required': 'true'} }
                  - { property: 'school', label: "École", type_options: {'required': 'true'} }
                  - { property: 'planning', label: "Agenda" }
        User:
          class: AppBundle\Entity\User
          label: 'admin.user.label'
          list:
              fields:
                  - Username
                  - idFacebook
                  - { property: 'email', type: 'email' }
                  - last_login
                  - locked
                  - { property: 'school', label: "École" }
                  - { property: 'studentGroup', label: "Classe" }
              title: "Customers list"
          form:
              title: 'Edit User'
              fields:
                  - { type: 'group', css_class: 'col-sm-6' }
                  - { type: 'section', label: 'User Profil', icon: 'user' }
                  - { property: 'Username', type: 'text' }
                  # - { property: 'email', type: 'email' }
                  # - { property: 'password', type: 'password' }
                  - { type: 'group', css_class: 'col-sm-6'}
                  - { type: 'section', label: 'Identity', icon: 'info' }
                  - { property: 'Firstname', type: 'text', label: 'Prénom' }
                  - { property: 'Lastname', type: 'text', label: 'Nom' }
              actions:
                  delete:
                      name: delete
                      type: method
                      label: action.delete
                      css_class: 'btn btn-default action-delete'
                      icon: trash-o
                  list:
                      name: list
                      type: method
                      label: action.list
                      css_class: 'btn btn-secondary action-list'
                      icon: caret-square-o-left

hwi_oauth:
    http_client:
        timeout:       10000
        verify_peer: false
        max_redirects: 1000
        ignore_errors: false
    firewall_names: [main]
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook.app_id%"
            client_secret:       "%facebook.app_secret%"
            scope:               "email"
            infos_url:     "https://graph.facebook.com/me?fields=name,email,picture,birthday,gender,first_name,last_name"
            paths:
                email: email
            options:
                # display: popup
                csrf: true
